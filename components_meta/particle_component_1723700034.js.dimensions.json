{
    "component_name": "particle_component",
    "id": "particle_component_1723700034",
    "type": "containerComponent",
    "metadata": {
        "markdownText": "<template>\n  <div>\n    <!-- Display a prop -->\n    <h1>{{ title }}</h1>\n\n    <!-- Computed property -->\n    <p>Computed Count: {{ computedCount }}</p>\n\n    <!-- Watcher in action -->\n    <p>Email (watching for changes): {{ email }}</p>\n\n    <!-- Methods and form -->\n    <form @submit.prevent=\"submitForm\">\n      <input v-model=\"email\" type=\"email\" placeholder=\"Enter your email\" required />\n      <button type=\"submit\">Submit</button>\n    </form>\n\n  </div>\n</template>\n\n<script>\n\n\nexport default {\n  name: \"ExampleComponent\",\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    initialCount: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      email: \"\",\n      count: this.initialCount,\n    };\n  },\n  computed: {\n    computedCount() {\n      return this.count * 2;\n    }\n  },\n  methods: {\n    submitForm() {\n      console.log(\"Form submitted with email:\", this.email);\n      this.email = \"\"; // Reset email after submission\n    },\n    incrementCount() {\n      this.count++;\n    }\n  },\n  watch: {\n    email(newEmail) {\n      console.log(\"Email changed to:\", newEmail);\n    }\n  },\n  created() {\n    console.log(\"Component created\");\n  },\n  mounted() {\n    console.log(\"Component mounted\");\n  },\n  updated() {\n    console.log(\"Component updated\");\n  },\n  destroyed() {\n    console.log(\"Component destroyed\");\n  }\n};\n</script>\n\n<style scoped>\n/* Example scoped styles */\nh1 {\n  color: blue;\n}\np {\n  font-size: 18px;\n}\nform {\n  margin-top: 20px;\n}\n</style>",
        "markdownBackground": "linear-gradient(176.11deg, rgba(216, 196, 255, 0.1) 3.29%, \n    rgba(152, 97, 255, 0) 28.82%), linear-gradient(20.12deg, #261B3A 73.55%, #0F182A 166.53%)"
    },
    "w": 12,
    "h": 13,
    "x": 0,
    "y": 8,
    "i": "1",
    "minW": 3,
    "maxW": 12,
    "minH": 1,
    "moved": false,
    "static": false,
    "isDraggable": true,
    "isResizable": true,
    "name": ""
}